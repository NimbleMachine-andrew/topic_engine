# Generated by Django 5.1.3 on 2024-11-15 23:29

import django.contrib.gis.db.models.fields
import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(unique=True)),
                ('name', models.CharField(max_length=200)),
                ('source_type', models.CharField(choices=[('rss', 'RSS Feed'), ('page', 'Web Page')], max_length=10)),
                ('active', models.BooleanField(default=True)),
                ('check_frequency', models.IntegerField(default=3600)),
                ('last_checked', models.DateTimeField(blank=True, null=True)),
                ('last_success', models.DateTimeField(blank=True, null=True)),
                ('error_count', models.IntegerField(default=0)),
                ('selectors', models.JSONField(blank=True, null=True)),
                ('health_metrics', models.JSONField(blank=True, default=dict)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'indexes': [models.Index(fields=['active', 'last_checked'], name='core_source_active_b3f73a_idx'), models.Index(fields=['source_type', 'error_count'], name='core_source_source__460201_idx')],
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(unique=True)),
                ('title', models.CharField(max_length=500)),
                ('raw_content', models.TextField()),
                ('processed', models.BooleanField(default=False)),
                ('processed_content', models.JSONField(blank=True, null=True)),
                ('processing_errors', models.JSONField(blank=True, default=list)),
                ('processing_version', models.CharField(blank=True, max_length=50)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('embedding', models.BinaryField(null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('geo_context', models.JSONField(blank=True, null=True)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('authors', models.JSONField(blank=True, default=list)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.source')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('model_config', models.JSONField(default=dict)),
                ('model_metrics', models.JSONField(default=dict)),
                ('templates', models.JSONField(default=dict)),
                ('path', models.CharField(blank=True, max_length=1000)),
                ('depth', models.IntegerField(default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='core.topic')),
            ],
        ),
        migrations.CreateModel(
            name='TopicScore',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.FloatField()),
                ('confidence', models.FloatField()),
                ('classifier_version', models.CharField(max_length=50)),
                ('classification_date', models.DateTimeField(auto_now=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.content')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.topic')),
            ],
        ),
        migrations.AddField(
            model_name='content',
            name='topics',
            field=models.ManyToManyField(through='core.TopicScore', to='core.topic'),
        ),
        migrations.CreateModel(
            name='TrainingExample',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.TextField()),
                ('label', models.BooleanField()),
                ('source_url', models.URLField(blank=True, null=True)),
                ('embedding', models.BinaryField(null=True)),
                ('added_by', models.CharField(blank=True, max_length=200)),
                ('validated', models.BooleanField(default=False)),
                ('validation_score', models.FloatField(blank=True, null=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.topic')),
            ],
        ),
        migrations.AddIndex(
            model_name='topic',
            index=models.Index(fields=['slug'], name='core_topic_slug_0f8b5e_idx'),
        ),
        migrations.AddIndex(
            model_name='topic',
            index=models.Index(fields=['path'], name='core_topic_path_a8dce3_idx'),
        ),
        migrations.AddIndex(
            model_name='topicscore',
            index=models.Index(fields=['score', 'confidence'], name='core_topics_score_d36fa6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='topicscore',
            unique_together={('content', 'topic')},
        ),
        migrations.AddIndex(
            model_name='content',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='core_conten_search__dce135_gin'),
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['processed', 'created_at'], name='core_conten_process_bd184f_idx'),
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['publish_date'], name='core_conten_publish_a8f7f5_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingexample',
            index=models.Index(fields=['topic', 'label'], name='core_traini_topic_i_dc9d79_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingexample',
            index=models.Index(fields=['validated', 'validation_score'], name='core_traini_validat_4801fd_idx'),
        ),
    ]
